alias bt="wget http://cachefly.cachefly.net/100mb.test -O /dev/null"
alias vim="nvim"
alias lock="/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine"
alias lash="ls -lash"
alias mewy="ssh tunnel"
alias cse="ssh cse"
alias debserver="ssh debianlocal"
alias flushdns="sudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder; say DNS cache flushed"
alias reload="source ~/.zshrc"
alias ip2="ipython2"
# alias ip="ipython"
alias ip3="ipython3"
alias ctfpy="ipython2 --profile=ctf"
# alias chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias kga=" k get svc,statefulset,deployment,pods,daemonset,hpa,replicaset"
alias kctx="kubectx"
alias k=kubectl
alias s="git status -sb"

gitpr() {
    BRANCH=$1
    if [ -z $BRANCH ]; then
        BRANCH="$( git rev-parse --abbrev-ref HEAD )"
    fi
    xdg-open "https://github.com/assetnote/cs-engine/compare/staging...$BRANCH?quick_pull=1&reviewers=infosec-au&assignee=minight&labels=bug&projects=assetnote/1"
}


recomp() {
    if [ -f '~/.zcompdump' ]; then
        rm -rf ~/.zcompdump*
    fi
    zsh
}

jar-decompile() {
    SRC=$1
    DST=$2
    java -cp /usr/local/bin/java-decompiler.jar \
        org.jetbrains.java.decompiler.main.decompiler.ConsoleDecompiler \
        -dgs=true \
        "${SRC}" "${DST}"
}
alias pg='ping 8.8.8.8'
# alias burp="java -jar /Users/sean/tools/burp/burp-latest &; /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --profile-directory=\"Profile 4\" --disable-xss-auditor &"
alias burpo="GDK_SCALE=2 java -jar /Users/seanyeoh/apps/burp/burp.jar &"
alias ctftime="docker run -v /Users/sean/ctftime:/root/host-share --privileged -it --workdir=/root ctfhacker/epictreasure"
alias rot13="tr '[A-Za-z]' '[N-ZA-Mn-za-m]’"
alias awk=gawk
alias wtf="echo -n 'ಠ_ಠ' | pbcopy"
alias dc=docker-compose
alias gam="/Users/sean/bin/gam/gam"
alias tmux="tmux -2u"
alias payloads="cd ~/tmp/payloads"
alias pload=payloads
alias checkssl="gnutls-cli --print-cert"
alias aosmark="cd /Users/sean/google-drive/Uni/Courses/COMP/9242-aos/project/comp9242-aos; open /Users/sean/google-drive/Uni/Courses/COMP/9242-aos/Milestone\ marking\ -\ CSE\ Operating\ Systems\ -\ UNSW\ Confluence.pdf "
alias white="bash /Users/sean/offline/base16-shell/scripts/base16-tomorrow.sh"
alias drma="docker rm \$(docker ps -a -f status=exited -q)"
alias drka="docker kill \$(docker ps -a -f status=running -q)"
alias drmi="docker rmi \$(docker images -q)"
alias uncolor='echo -ne "\033[0m"'
alias pipenvreq="pipenv install \$(< requirements.txt)"
alias mss="sudo masscan --ports 0-65535 --open --banners --rate 1000000"
alias pcp="pwd | pbcopy"
alias cdp="cd \"\$(pbpaste)\""
alias untilgood="while [ $? -ne 0 ]; do !!; done"

alias ndu="ncdu --color dark -rr -x --exclude .git --exclude node_modules"

dockerssh() {
    ssh docker@$1 -o IdentitiesOnly=yes -o "StrictHostKeyChecking false" -o "UserKnownHostsFile /dev/null" -i ~/.ssh/cs6443-master.pem
}
ff() {
    vim $(fzf)
}

gcd() {
    cd $GOPATH/src/github.com/$1
}

iosts() {
    ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no $1@io.netgarage.org
}

gce() {
    gcloud compute instances create --machine-type=f1-micro $1
    gcloud compute --project "cysca-162603" ssh --zone "us-west1-a" $1
}

gcedel() {
    gcloud compute instances delete $1
}

gerl() {
    export PATH="/Users/sean/Library/Application Support/ErlangInstaller/19.3/bin:$PATH";
    clear
    erl
}

borg_backup() {
    borg create sean@southpole:/glacier/backups/sean::$1 ~ \
        --progress \
        --exclude '*.pyc' \
        --exclude '/home/sean/.cache' \
        --exclude '/home/sean/.z.*' \
        --exclude '._*' \ && 
    borg check sean@southpole:/glacier/backups/sean
}

rmdupe() {
    cat $1 | perl -lne 's/\s*$//; print if ! $x{$_}++'
}

mmv() {
    for file in `ls`; do
        mv $file "$1-$file";
    done;
}

rng() {
    od -tu2 -vAn -N$1 < /dev/urandom | tr '\n' ' ' | sed 's/ //g'
}

toast() {
    curl "http://localhost:11001/notify?msg=$1"
}

alias notify="toast success || toast failed"


dockershell() {
    docker exec -it "$@"
}

alias dsh="dockershell"

alias whichk="kubectl config current-context"
alias kgetc="kubectl config get-contexts"

milestones() {
  hub api --cache 3600 graphql -f query='
    {
      repository(owner: "{owner}", name: "{repo}") {
        milestones(first: 100, states: OPEN, orderBy: {field:CREATED_AT, direction:DESC}) {
          edges {
            node {
              title
              number
            }
          }
        }
      }
    }
  ' | jq -r '.data.repository.milestones.edges[].node | [.number,.title] | @tsv'
}

alias gitms=milestones
alias r70c="go run $HOME/Documents/work/assetnote/cs-engine/cmd/route70 check -"
