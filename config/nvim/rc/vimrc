" copied from
" https://github.com/Shougo/shougo-s-github/blob/master/vim/rc/vimrc
if &compatible
  set nocompatible
endif

function! s:source_rc(path, ...) abort "{{{
  let use_global = get(a:000, 0, !has('vim_starting'))
  let abspath = resolve(expand('~/.config/nvim/rc/' . a:path))
  if !use_global
    execute 'source' fnameescape(abspath)
    return
  endif

  " substitute all 'set' to 'setglobal'
  let content = map(readfile(abspath),
        \ 'substitute(v:val, "^\\W*\\zsset\\ze\\W", "setglobal", "")')
  " create tempfile and source the tempfile
  let tempfile = tempname()
  try
    call writefile(content, tempfile)
    execute 'source' fnameescape(tempfile)
  finally
    if filereadable(tempfile)
      call delete(tempfile)
    endif
  endtry
endfunction"}}}

" Set augroup.
augroup MyAutoCmd
  autocmd!
  autocmd FileType,Syntax,BufNewFile,BufNew,BufRead *?
        \ call vimrc#on_filetype()
  autocmd CursorHold *.toml syntax sync minlines=300
augroup END

" -----------------------------------------------------------------------

call s:source_rc('settings.vim')

if has('nvim')
  call s:source_rc('neovim.rc.vim')
endif

call s:source_rc('mappings.vim')

call s:source_rc('plugins.vim')
filetype plugin indent on

call s:source_rc('syntax.vim')

"---------------------------------------------------------------------------
set secure

" vim: foldmethod=marker
